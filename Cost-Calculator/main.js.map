{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cost-calculation/cost-calculation.component.css","webpack:///./src/app/cost-calculation/cost-calculation.component.html","webpack:///./src/app/cost-calculation/cost-calculation.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,+DAA+D,+H;;;;;;;;;;;ACA/D,qG;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,iBAAiB,CAAC;IAC5B,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AAEe;AACT;AACS;AACiC;AAezF;IAAA;IAAyB,CAAC;IAAb,SAAS;QAbrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qGAAwB;aACzB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,qEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACrBtB,+DAA+D,uK;;;;;;;;;;;ACA/D,kIAAkI,YAAY,wNAAwN,YAAY,gBAAgB,YAAY,+LAA+L,YAAY,gEAAgE,YAAY,yMAAyM,YAAY,gBAAgB,YAAY,WAAW,WAAW,GAAG,eAAe,GAAG,eAAe,6KAA6K,YAAY,gBAAgB,YAAY,aAAa,WAAW,GAAG,eAAe,GAAG,eAAe,6B;;;;;;;;;;;;;;;;;;ACA/qC;AAEA;AAQlD;IAeE,kCAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAXpC,yCAAyC;QACzC,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAG,KAAK,CAAC;QACpB,eAAU,GAAG,KAAK,CAAC;QAEnB,+CAA+C;QAC/C,aAAQ,GAAW,EAAE,CAAC;QACtB,kBAAa,GAAW,EAAE,CAAC;QAEnB,SAAI,GAAW,uBAAuB,CAAC;IAEP,CAAC;IAEzC,2CAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,IAAI,CAAC,IAAI,CAAC;aAC/B,SAAS,CAAC,cAAI;YACb,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC;YACxB,KAAI,CAAC,SAAS,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,OAAO;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAA2C;IAC3C,oDAAiB,GAAjB,UAAkB,QAAgB;QAChC,IAAI,QAAQ,IAAI,KAAK,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM;YAC5C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,2BAA2B;YACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC/B;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC1B;IACH,CAAC;IAED,kDAAkD;IAClD,oDAAiB,GAAjB,UAAkB,aAAqB;QACrC,IAAI,aAAa,IAAI,mBAAmB,EAAE;YACxC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM;YAC1C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,CAAC,2BAA2B;YACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC9B;aAAM;YACL,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC;SAC1B;IACH,CAAC;IA9CU,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,oIAAgD;;SAEjD,CAAC;+EAgB0B,+DAAU;OAfzB,wBAAwB,CAgDpC;IAAD,+BAAC;CAAA;AAhDoC;;;;;;;;;;;;;ACVrC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-cost-calculation></app-cost-calculation>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Cost-Calculator';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { CostCalculationComponent } from './cost-calculation/cost-calculation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CostCalculationComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nvc3QtY2FsY3VsYXRpb24vY29zdC1jYWxjdWxhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div>\\n  <h3>Chose Project Type</h3>\\n  <select>\\n    <option *ngFor=\\\"let cost of costs\\\" [value]=cost.label>{{cost.label}}</option>\\n  </select>\\n</div>\\n\\n<div *ngIf=\\\"isOptions\\\">\\n  <h3>Type of Project</h3>\\n  <div *ngFor=\\\"let data of costs[0].subfields\\\" (click)=\\\"toggleProjectType(data.label)\\\">\\n    <input type=\\\"radio\\\" value={{data.label}} name=\\\"any\\\">{{data.label}}\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"appFeatures\\\">\\n  <h3>Features (Subarray of APP)</h3>\\n  <div *ngFor=\\\"let data of costs[0].subfields[0].subfields\\\">\\n    <input type=\\\"checkbox\\\" value={{data.label}} name=\\\"any\\\" \\n    (click)=\\\"toggleFeaturesApp(data.label)\\\">{{data.label}}\\n  </div>\\n</div>\\n\\n<div *ngIf=\\\"appProject\\\">\\n  <h3>Size of Project (Business Website)</h3>\\n  <div *ngFor=\\\"let data of costs[1].Type_of_website[0].subfields\\\">\\n    <input type=\\\"radio\\\" value={{data.label}} name=\\\"any\\\">{{data.label}}\\n    <p>{{data.desc}},{{data.minPrice}},{{data.maxPrice}}</p>\\n  </div>\\n\\n    <h3>SignUp strategy(Business Website)</h3>\\n    <div *ngFor=\\\"let data of costs[2].Signup_json[0].subfields\\\">\\n      <input type=\\\"checkbox\\\" value={{data.label}} name=\\\"any\\\">{{data.label}}\\n      <p>{{data.desc}},{{data.minPrice}},{{data.maxPrice}}</p>\\n    </div>\\n</div>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Cost } from \"../cost\";\nimport { HttpClient } from '@angular/common/http';\nimport { fail } from 'assert';\n\n@Component({\n  selector: 'app-cost-calculation',\n  templateUrl: './cost-calculation.component.html',\n  styleUrls: ['./cost-calculation.component.css']\n})\nexport class CostCalculationComponent implements OnInit {\n\n  costs: Cost[]; // Array of cost model\n\n  // Boolen variables to toggle the options\n  isOptions = false;\n  appFeatures = false;\n  appProject = false;\n\n  // String variables to compare with json labels\n  labelApp: string = \"\";\n  labelBusiness: string = \"\";\n\n  private _url: string = 'assets/data/cost.json';\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.get<Cost[]>(this._url)\n    .subscribe(data => {\n      this.costs = data;\n      console.log(this.costs);\n      this.isOptions = !this.isOptions; // true\n    });\n  }\n\n  // Toggle the subarray of APP field in json\n  toggleProjectType(labelApp: string) {\n    if (labelApp == \"APP\") {\n      this.appFeatures = !this.appFeatures; //true\n      this.isOptions = false; // Hiding the existing view\n      console.log(this.appFeatures);\n    } else {\n      this.appFeatures = false;\n    }\n  }\n\n  // Toggle the sub of subarray of APP field in json\n  toggleFeaturesApp(labelBusiness: string) {\n    if (labelBusiness == 'Business Websites') {\n      this.appProject = !this.appProject; //true\n      this.appFeatures = false; // Hiding the existing view\n      console.log(this.appProject);\n    } else {\n      this.appProject == false;\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}